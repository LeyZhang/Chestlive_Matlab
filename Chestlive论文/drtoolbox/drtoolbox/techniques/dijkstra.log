This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019) (preloaded format=mex 2019.10.28)  7 JUN 2020 18:14
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**dijkstra.cpp
(./dijkstra.cpp
This is MeX  Version 1.05  18 XII 1993  (B. Jackowski & M. Ry\'cko)
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.31  *   http://www.ahhf45.com/info/Data_
                                          Structures_and_Algorithms/resource...

? q
OK, entering \batchmode...
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.53 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (56.28438pt too wide) in paragraph at lines 1--53
\tenrm http://www.ahhf45.com/info/Data$[]\teni tructures[]nd[]lgorithms=resourc
es=technical[]rtile=fibonacci[]eap=fibonacci:htm \tensy ^^C|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm h
.\kern-0.27779
.\tenrm t
.\tenrm t
.\tenrm p
.etc.


Overfull \hbox (31.86545pt too wide) in paragraph at lines 1--53
\tensy ^^C\teni Author \tenrm : \teni MarkSteyvers; StanfordUniversity; \tenrm 
19\teni Dec\tenrm 2000\teni : \tensy ^^C ^^C\teni ModifiedbyRamonCasero < rcase
ro\tenrm @\teni gmail:com >|

\hbox(6.94444+1.94444)x469.75499, glue set - 1.0
.\tensy ^^C
.\teni A
.\teni u
.\teni t
.\teni h
.etc.


Overfull \hbox (119.68893pt too wide) in paragraph at lines 1--53
\teni ; UniversityofOxford; \tensy ^^C\tenrm 23\teni Mar\tenrm 2010\teni toalso
providethepredecessorlistattheoutput: \tensy ^^C ^^C\teni Thisfileisdistributed
asaderivativeworkofathird \tensy ^^@|

\hbox(6.94444+1.94444)x469.75499, glue set - 1.0
.\teni ;
.\glue(\thinmuskip) 1.66663
.\teni U
.\kern1.09026
.\teni n
.etc.


Overfull \hbox (120.10909pt too wide) in paragraph at lines 1--53
\teni partyfunction \tensy ^^C \teni withprojectGerardus: \tensy ^^C ^^C\teni h
ttp \tenrm : \teni ==code:google:com=p=gerardus= \tensy ^^C ^^C ^^C \teni Tocom
piledijkstra:cppwithmexfromMatlab[]sGUI \tenrm :|

\hbox(7.51782+2.5)x469.75499, glue set - 1.0
.\teni p
.\teni a
.\teni r
.\kern0.27779
.\teni t
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.54 #
      include <math.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.55 #
      include "mex.h"
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.57 extern void _
                  main();
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.58 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.59 #
      include <stdlib>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.60 // #
         include <iostream.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.61 #
      include <iostream>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.62 #
      include <stdio>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.63 // #
         include <conio.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.64 #
      include <ctype>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.65 #
      include <memory>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.66 #
      include <time>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.68 #
      include "fibheap.h"
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.70 #
      define _FIBHEAP_CPP
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.70 #define _
              FIBHEAP_CPP
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.71 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.102 // FHN_
             Assign() should be called before code that deals with the copy of
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.115 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (947.69368pt too wide) in paragraph at lines 77--115
\tenrm FHN$[]\teni ssign\tenrm ()\teni shouldbecalledbeforecodethatdealswiththe
copyof==thekeyvalue:Forcomparisonoperators; thefunctionFHN[]mp\tenrm ()\teni sh
ould==appearfirst:Ifitreturns\tenrm 0\teni ; thenkeyscanbecomparedasnormal:==Th
efollowingindicateswhatthethreemostcommonoperatorsmustdo==basedonthereturnvalue
ofFHN[]mp\tenrm ()\teni ====For \tenrm ==|

\hbox(7.5+2.5)x469.75499
.\tenrm F
.\tenrm H
.\tenrm N
.\mathon
.\hbox(4.78334+0.0)x6.51392, shifted 1.49998
..\seveni A
.etc.


Overfull \hbox (93.28398pt too wide) in paragraph at lines 77--115
\teni ; ifzeroreturned; thencomparekeys==ifnon \tensy ^^@ \teni zeroXreturned; 
thenreturn\tenrm 0\teni ==For <; ifzeroreturned; thencomparekeys==ifnon \tensy 
^^@|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni ;
.\glue(\thinmuskip) 1.66663
.\teni i
.\teni f
.\kern1.0764
.etc.


Overfull \hbox (81.25665pt too wide) in paragraph at lines 77--115
\teni zeroXreturned; thenreturnX < \tenrm 0?1 : 0\teni ==For >; ifzeroreturned;
 thencomparekeys==ifnon \tensy ^^@ \teni zeroXreturned; thenreturnX >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni z
.\kern0.4398
.\teni e
.\teni r
.\kern0.27779
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.116 #
       include <stdlib.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.117 #
       include <iostream>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.118 #
       include <stdio.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.120 #
       include "fibheap.h"
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (390.80312pt too wide) in paragraph at lines 122--127
[]\tenrm //********************************************************************
******* //=========================================================|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm *
.\tenrm *
.etc.


Overfull \hbox (112.71887pt too wide) in paragraph at lines 122--127
\tenrm // Fi-bHe-ap-Node Con-struc-tor //======================================
===================|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm F
.\tenrm i
.etc.


Overfull \hbox (3.57973pt too wide) in paragraph at lines 134--141
[]\tenrm //=========================================================|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (257.05232pt too wide) in paragraph at lines 134--141
\tenrm will en-sure that Fi-bHeap class // calls de-ri-ved class de-struc-tors.
 //========================================================= |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm w
.\tenrm i
.\tenrm l
.\tenrm l
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.147 // FHN_
             Assign()
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.155 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (3.57973pt too wide) in paragraph at lines 146--155
[]\tenrm //=========================================================|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (1024.9212pt too wide) in paragraph at lines 146--155
\tenrm // FHN$[]\teni ssign\tenrm ()\teni ====Tobeusedasfirststepofanassignment
operatorina==derivedclass:Thederivedclasswillhandleassignment==ofkeyvalue; andt
hisfunctionhandlescopyofthe==NegInfinityFlag\tenrm (\teni whichoverridesthekeyv
alueifitis==set\tenrm )\teni :== \tenrm =======================================
==================$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm F
.\tenrm H
.etc.

 [1]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.156 void FibHeapNode::FHN_
                            Assign(FibHeapNode& RHS)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.156 void FibHeapNode::FHN_Assign(FibHeapNode&
                                                RHS)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.160 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.162 // FHN_
             Cmp()
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.181 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (3.57973pt too wide) in paragraph at lines 161--181
[]\tenrm //=========================================================|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (1248.57191pt too wide) in paragraph at lines 161--181
\tenrm // FHN$[]\teni mp\tenrm ()\teni ====TobeusedasthefirststepofALLcomparato
rsina==derivedclass:====Comparestherelativestateofthetwoneg:infinity==flags:Not
ethat[]this[]isthelefthandside:If==LHSneg:infinityisset; thenitwillbelessthan\t
enrm (\tensy ^^@\tenrm 1)\teni ==theRHSunlessRHSneg:infinityflagisalsoset:==Onl
yiffunctionreturns\tenrm 0\teni shouldthekeycomparison==definedinthederivedclas
sbeperformed; e:g:====For \tenrm ==|

\hbox(7.51782+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm F
.\tenrm H
.etc.


Overfull \hbox (93.28398pt too wide) in paragraph at lines 161--181
\teni ; ifzeroreturned; thencomparekeys==ifnon \tensy ^^@ \teni zeroXreturned; 
thenreturn\tenrm 0\teni ==For <; ifzeroreturned; thencomparekeys==ifnon \tensy 
^^@|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni ;
.\glue(\thinmuskip) 1.66663
.\teni i
.\teni f
.\kern1.0764
.etc.


Overfull \hbox (81.25665pt too wide) in paragraph at lines 161--181
\teni zeroXreturned; thenreturnX < \tenrm 0?1 : 0\teni ==For >; ifzeroreturned;
 thencomparekeys==ifnon \tensy ^^@ \teni zeroXreturned; thenreturnX >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni z
.\kern0.4398
.\teni e
.\teni r
.\kern0.27779
.etc.


Overfull \hbox (14.41292pt too wide) in paragraph at lines 161--181
\tenrm 0?1 : 0\teni == \tenrm =================================================
========$ |

\hbox(7.5+2.5)x469.75499
.\tenrm 0
.\tenrm ?
.\tenrm 1
.\glue(\thickmuskip) 2.77771 plus 2.77771
.\tenrm :
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.182 int  FibHeapNode::FHN_
                            Cmp(FibHeapNode& RHS)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.182 int  FibHeapNode::FHN_Cmp(FibHeapNode&
                                             RHS)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.188 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (193.57788pt too wide) in paragraph at lines 182--188
[]\tenrm int FibHeapNode::FHN$[]\teni mp\tenrm (\teni FibHeapNodeRHS\tenrm )[]$
 |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm n
.\kern-0.27779
.\tenrm t
.etc.


Overfull \hbox (120.24675pt too wide) in paragraph at lines 189--195
[]\tenrm //====================================================================
====|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (131.91348pt too wide) in paragraph at lines 189--195
\tenrm uld do. //==============================================================
========== |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm u
.\tenrm l
.\tenrm d
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm d
.etc.

! Misplaced alignment tab character &.
l.196 void FibHeapNode::operator =(FibHeapNode&
                                                RHS)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.198      FHN_
               Assign(RHS);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.200 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.201 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (60.93054pt too wide) in paragraph at lines 196--201
[]\tenrm void Fi-bHe-ap-Node::operator =(Fi-bHe-ap-Node RHS)  FHN$[]\teni ssign
\tenrm (\teni RHS\tenrm ); \teni ==Keyassignmentgoeshereinderivedclasses$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.

! Misplaced alignment tab character &.
l.202 int  FibHeapNode::operator ==(FibHeapNode&
                                                 RHS)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.204      if (FHN_
                   Cmp(RHS)) return 0;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.207 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.208 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (125.58022pt too wide) in paragraph at lines 202--208
[]\tenrm int Fi-bHe-ap-Node::operator ==(Fi-bHe-ap-Node RHS)  if (FHN$[]\teni m
p\tenrm (\teni RHS\tenrm ))\teni return\tenrm 0; \teni ==Keycomparegoeshereinde
rivedclassesreturn\tenrm 1;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm n
.\kern-0.27779
.\tenrm t
.etc.

! Misplaced alignment tab character &.
l.209 int  FibHeapNode::operator <(FibHeapNode&
                                                RHS)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.213      if ((X=FHN_
                      Cmp(RHS)) != 0)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.217 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.218 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (3.57973pt too wide) in paragraph at lines 219--222
[]\tenrm //=========================================================|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (28.4687pt too wide) in paragraph at lines 219--222
\tenrm // Print() //========================================================= |


\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm P
.\tenrm r
.etc.


Overfull \hbox (530.80354pt too wide) in paragraph at lines 229--234
[]\tenrm //********************************************************************
******* //=====================================================================
======|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm *
.\tenrm *
.etc.


Overfull \hbox (229.94147pt too wide) in paragraph at lines 229--234
\tenrm // Fi-bHeap Con-struc-tor //============================================
===============================|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm F
.\tenrm i
.etc.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 242--245
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (224.247pt too wide) in paragraph at lines 242--245
\tenrm // Fi-bHeap De-struc-tor //=============================================
============================== |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm F
.\tenrm i
.etc.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 260--271
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (123.58015pt too wide) in paragraph at lines 260--271
\tenrm //======================================================================
===== |

\hbox(7.5+2.5)x469.75499
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 308--311
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (300.55273pt too wide) in paragraph at lines 308--311
\tenrm // Union() - O(1) ac-tual; O(1) amor-ti-zed //==========================
================================================= |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm U
.\tenrm n
.etc.

 [2]
Overfull \hbox (56.82928pt too wide) in paragraph at lines 352--356
[]\tenrm OtherHeap->MinRoot = NULL; OtherHeap->NumNodes = OtherHeap->NumTrees =
 OtherHeap->NumMarkedNodes|

\hbox(6.88889+1.94444)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm O
.\tenrm t
.\tenrm h
.\tenrm e
.etc.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 360--363
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (308.6083pt too wide) in paragraph at lines 360--363
\tenrm // Mi-ni-mum - O(1) ac-tual; O(1) amor-ti-zed //========================
=================================================== |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm M
.\tenrm i
.etc.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 369--372
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (383.08061pt too wide) in paragraph at lines 369--372
\tenrm // Extract-Min() - O(n) worst-case ac-tual; O(lg n) amor-ti-zed //======
===================================================================== |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm E
.\tenrm x
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.437          _
                Consolidate();
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.438 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 445--451
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (459.71964pt too wide) in paragraph at lines 445--451
\tenrm depth, and // the-re-fore the num-ber of an-ce-stor pa-rents, is bo-un-d
ed by O(lg n). //==============================================================
============= |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm d
.\tenrm e
.\tenrm p
.\tenrm t
.\tenrm h
.etc.

! Misplaced alignment tab character &.
l.452 ...aseKey(FibHeapNode *theNode, FibHeapNode&
                                                   NewKey)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.462      if (theParent != NULL &
                                  & *theNode < *theParent)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.462      if (theParent != NULL &&
                                    *theNode < *theParent)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.464          _
                Cut(theNode, theParent);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.466      }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.467 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (127.99176pt too wide) in paragraph at lines 461--467
[]\tenrm theParent = theNode->Parent; if (the-Pa-rent != NULL  *the-Node < *the
-Pa-rent)  $[]\teni ut\tenrm (\teni theNode; theParent\tenrm );[] \teni ascadin
gCut\tenrm (\teni theParent\tenrm );$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm t
.\tenrm h
.\tenrm e
.\tenrm P
.etc.

 [3]
Overfull \hbox (143.58015pt too wide) in paragraph at lines 474--481
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (149.41354pt too wide) in paragraph at lines 474--481
\tenrm node. //================================================================
=========== |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm n
.\tenrm o
.\kern0.27779
.\tenrm d
.\tenrm e
.etc.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 506--507
[]\tenrm //====================================================================
======= |

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.508 void FibHeap::_
                     Exchange(FibHeapNode*& N1, FibHeapNode*& N2)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.508 void FibHeap::_Exchange(FibHeapNode*&
                                            N1, FibHeapNode*& N2)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.508 ..._Exchange(FibHeapNode*& N1, FibHeapNode*&
                                                   N2)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.511 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.511 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 517--536
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (123.58015pt too wide) in paragraph at lines 517--536
\tenrm //======================================================================
===== |

\hbox(7.5+2.5)x469.75499
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.\tenrm =
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.537 void FibHeap::_
                     Consolidate()
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.543 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.543 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (208.04007pt too wide) in paragraph at lines 537--543
[]\tenrm void FibHeap::$[]\teni onsolidate\tenrm ()[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.

! Undefined control sequence.
l.563 //cout << "Top of Consolidate's loop\n
                                            ";
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.577                  _
                        Exchange(x, y);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Undefined control sequence.
l.582 //cout << "After a round of Linking\n
                                           ";
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra }, or forgotten $.
l.584         }
               
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.586 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (12.40231pt too wide) in paragraph at lines 573--586
[]\tenrm while (A[d] != NULL)  y = A[d]; if (*y < *x) $[]\teni xchange\tenrm (\
teni x; y\tenrm ); \teni if\tenrm (\teni w \tenrm == \teni y\tenrm )\teni w \te
nrm = \teni y\tensy ^^@ \teni > Right\tenrm ;[] \teni ink\tenrm (\teni y; x\ten
rm ); \teni A\tenrm [\teni d\tenrm ] =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm w
.\tenrm h
.\tenrm i
.\tenrm l
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.597               _
                     AddToRootList(A[I]);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.598 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.599 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 600--603
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (449.74734pt too wide) in paragraph at lines 600--603
\tenrm // The node y is re-mo-ved from the root list and be-co-mes a sub-tree o
f node x. //===================================================================
======== |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm T
.\tenrm h
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.604 void FibHeap::_
                     Link(FibHeapNode *y, FibHeapNode *x)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.607 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.607 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

 [4]
Overfull \hbox (143.58015pt too wide) in paragraph at lines 644--646
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (123.58015pt too wide) in paragraph at lines 644--646
\tenrm //======================================================================
===== |

\hbox(7.5+2.5)x469.75499
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.\tenrm =
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.647 void FibHeap::_
                     AddToRootList(FibHeapNode *x)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.651 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.651 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (21.80505pt too wide) in paragraph at lines 647--651
[]\tenrm void FibHeap::$[]\teni ddToRootList\tenrm (\teni FibHeapNode \tensy ^^
C \teni x\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 656--659
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (364.16388pt too wide) in paragraph at lines 656--659
\tenrm // Re-move node x from the child list of its pa-rent node y //==========
================================================================= |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm /
.\tenrm /
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm R
.\tenrm e
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.660 void FibHeap::_
                     Cut(FibHeapNode *x, FibHeapNode *y)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.666 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.666 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (202.29158pt too wide) in paragraph at lines 660--666
[]\tenrm void FibHeap::$[]\teni ut\tenrm (\teni FibHeapNode \tensy ^^C \teni x;
 FibHeapNode \tensy ^^C \teni y\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.672      _
            AddToRootList(x);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.673 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.674 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 675--684
[]\tenrm //====================================================================
=======|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (176.96915pt too wide) in paragraph at lines 675--684
\tenrm con-so-li-date. //======================================================
===================== |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm c
.\tenrm o
.\tenrm n
.\discretionary
..\tenrm -
.\tenrm s
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.685 void FibHeap::_
                     CascadingCut(FibHeapNode *y)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.688 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.688 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.699              _
                    Cut(y, z);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.702          }
                
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.703      }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.704 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.705 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.716       virtual void operator =(FibHeapNode&
                                                 RHS);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.717       virtual int  operator ==(FibHeapNode&
                                                  RHS);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.718       virtual int  operator <(FibHeapNode&
                                                 RHS);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.741      FHN_
               Assign(Temp);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.742 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.743 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (51.60326pt too wide) in paragraph at lines 737--743
[]\tenrm void He-ap-Node::operator =(do-uble New-Key-Val)  He-ap-Node Temp; Tem
p.N = N = New-Key-Val; FHN$[]\teni ssign\tenrm (\teni Temp\tenrm );$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.

! Misplaced alignment tab character &.
l.744 void HeapNode::operator =(FibHeapNode&
                                             RHS)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.746      FHN_
               Assign(RHS);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.747      N = ((HeapNode&
                          ) RHS).N;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.748 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.749 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.750 int  HeapNode::operator ==(FibHeapNode&
                                              RHS)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.752      if (FHN_
                   Cmp(RHS)) return 0;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.753      return N == ((HeapNode&
                                  ) RHS).N ? 1 : 0;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.754 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.755 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (67.1986pt too wide) in paragraph at lines 750--755
[]\tenrm int He-ap-Node::operator ==(Fi-bHe-ap-Node RHS)  if (FHN$[]\teni mp\te
nrm (\teni RHS\tenrm ))\teni return\tenrm 0; \teni returnN \tenrm == ((\teni He
apNode\tenrm )\teni RHS\tenrm )\teni :N\tenrm ?1 :|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm n
.\kern-0.27779
.\tenrm t
.etc.

! Misplaced alignment tab character &.
l.756 int  HeapNode::operator <(FibHeapNode&
                                             RHS)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.760      if ((X=FHN_
                      Cmp(RHS)) != 0)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.762 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.763      return N < ((HeapNode&
                                 ) RHS).N ? 1 : 0;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.777 void dodijk_
                  sparse(
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.796 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.796 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (746.44356pt too wide) in paragraph at lines 777--796
\teni sr; mwSize \tensy ^^C \teni irs; mwSize \tensy ^^C \teni jcs; HeapNode \t
ensy ^^C \teni A; FibHeap \tensy ^^C \teni theHeap\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni s
.\teni r
.\kern0.27779
.\kern-0.55556
.\teni ;
.etc.

! Misplaced alignment tab character &.
l.805           theHeap->Insert( &
                                  A[i] );
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.814    theHeap->Insert(&
                          Temp);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

 [5]
! Misplaced alignment tab character &.
l.828    while ((finished==0) &
                               & (ndone < M))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.828    while ((finished==0) &&
                                 (ndone < M))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


Overfull \hbox (37.02255pt too wide) in paragraph at lines 832--835
[]\tenrm Min = (He-ap-Node *) theHeap->ExtractMin(); clo-sest = Min->GetIndexVa
lue(); clo-se-stD = Min->GetKeyValue(); |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm M
.\tenrm i
.\tenrm n
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.

! You can't use `macro parameter character #' in horizontal mode.
l.860 ...           mexPrintf( "INSPECT NEIGHBOR #
                                                  %d  olddist=%f newdist=%f\...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Misplaced alignment tab character &.
l.869                theHeap->DecreaseKey( &
                                            A[ whichneighbor ], Temp );
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! You can't use `macro parameter character #' in horizontal mode.
l.871 ...              mexPrintf( "UPDATING NODE #
                                                  %d  olddist=%f newdist=%f ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (120.24675pt too wide) in paragraph at lines 886--893
[]\tenrm //====================================================================
====|

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (343.2749pt too wide) in paragraph at lines 886--893
\tenrm along the root list, then it calls it-self on each // child list. //====
==================================================================== |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm a
.\tenrm l
.\tenrm o
.\tenrm n
.\tenrm g
.etc.


Overfull \hbox (19.43912pt too wide) in paragraph at lines 903--915
[]\tenrm Temp = Tree; do  if (Temp->Left == NULL) me-xPrintf( "(Left is NULL)" 
); Temp->Print(); if (Temp->Parent|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm T
.\kern-0.83334
.\tenrm e
.\tenrm m
.etc.

! Misplaced alignment tab character &.
l.918 //      if (kbhit() &
                           & getch() == 27)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.918 //      if (kbhit() &&
                             getch() == 27)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.920 ...<< "Hit a key to resume or ESC to break\n
                                                  ";
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced alignment tab character &.
l.924      } while (Temp != NULL &
                                  & Temp != Tree);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.924      } while (Temp != NULL &&
                                    Temp != Tree);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.925      mexPrintf( "\n
                         " );
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.933              mexPrintf( "NONE\n
                                     " );
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced alignment tab character &.
l.936      } while (Temp!=NULL &
                                & Temp != Tree);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.936      } while (Temp!=NULL &&
                                  Temp != Tree);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.942          mexPrintf( "\n
                             \n\n" );
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.942          mexPrintf( "\n\n
                               \n" );
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.942          mexPrintf( "\n\n\n
                                 " );
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Overfull \hbox (143.58015pt too wide) in paragraph at lines 947--948
[]\tenrm //====================================================================
======= |

\hbox(7.5+2.5)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (22.49599pt too wide) in paragraph at lines 949--960
[]\tenrm void me-xFunc-tion( int nlhs, mxAr-ray *plhs[], int nrhs, const mxAr-r
ay *prhs[] )  do-uble *sr,*D,*P,*SS,*Dsmall;|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.

! Misplaced alignment tab character &.
l.982    if ((MS==0) || (NS==0) || ((MS>1) &
                                            & (NS>1))) mexErrMsgTxt( "Source...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.982    if ((MS==0) || (NS==0) || ((MS>1) &&
                                              (NS>1))) mexErrMsgTxt( "Source...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

 [6]
! Undefined control sequence.
l.1013 ... "Memory allocation failed-- ABORTING.\n
                                                  " );
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Overfull \hbox (302.30171pt too wide) in paragraph at lines 1023--1026
[]\tenrm /* -------------------------------------------------------------------
------------------------------ run the dijk-stra code -------------------------
------------------------------------------------------------------------|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm | (ligature ---)
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1029         dodijk_
                      sparse( M,N,S,Psmall,Dsmall,sr,irs,jcs,A,theHeap );
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1030 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

)
! Emergency stop.
<*> dijkstra.cpp
                
*** (job aborted, no legal \end found)

Output written on dijkstra.dvi (6 pages, 34480 bytes).
